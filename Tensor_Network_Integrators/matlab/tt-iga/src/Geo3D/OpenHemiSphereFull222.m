function [wn, ctpxn, ctpyn, ctpzn, knot1n, knot2n, knot3n] = OpenHemiSphereFull222(Rin, Rout, nn1, nn2, nn3)
%% Define inital Geometry
p1 = 2.0; p2 = 2.0; p3 = 2.0;
%
n1 = 9; 
%n1 = 3; 
n2 = 3; n3 = 3;
pi = 3.141654;
ff = pi/2;
f1 = 18*pi/180;
%knot1 = NonUniformKnot(n1, p1);
knot1  = [0 0 0 1/4 1/4 2/4 2/4 3/4 3/4 1 1 1]; %full
knot2 = NonUniformKnot(n2, p2);
knot3 = NonUniformKnot(n3, p3);
%%
% ctpx2D = [1.0      1.0     sin(f1);...
%           1.0      1.0     sin(f1);... 
%           0.0      0.0     0.0;...
%           ];

ctpx2D = [1.0      1.0      sin(f1);...
          1.0      1.0      sin(f1);... 
          0.0      0.0      0.0;...
         -1.0     -1.0     -sin(f1);...
         -1.0     -1.0     -sin(f1);...
         -1.0     -1.0     -sin(f1);...
          0.0      0.0      0.0;...
          1.0      1.0      sin(f1);...
          1.0      1.0      sin(f1)];

% ctpy2D = [0.0    0.0     0.0;...
%           1.0    1.0     sin(f1);...
%           1.0    1.0     sin(f1);...
%           ];

ctpy2D = [0.0    0.0     0.0;...
          1.0    1.0     sin(f1);...
          1.0    1.0     sin(f1);...
          1.0    1.0     sin(f1);...
          0.0    0.0     0.0;...
         -1.0   -1.0    -sin(f1);...
         -1.0   -1.0    -sin(f1);...
         -1.0   -1.0    -sin(f1);...
          0.0    0.0     0.0];

% ctpz2D = [0.0    tan(2*f1)    cos(f1);...
%           0.0    tan(2*f1)    cos(f1);...
%           0.0    tan(2*f1)    cos(f1);...
%           ];

ctpz2D = [0.0    tan(2*f1)    cos(f1);...
          0.0    tan(2*f1)    cos(f1);...
          0.0    tan(2*f1)    cos(f1);...
          0.0    tan(2*f1)    cos(f1);...
          0.0    tan(2*f1)    cos(f1);...
          0.0    tan(2*f1)    cos(f1);...
          0.0    tan(2*f1)    cos(f1);...
          0.0    tan(2*f1)    cos(f1);...
          0.0    tan(2*f1)    cos(f1)];


%%
ctpx = zeros(n1, n2, n3);

ctpx(:,:,1) = Rin*ctpx2D;
ctpx(:,:,2) = 0.5*(Rin+Rout)*ctpx2D;
ctpx(:,:,3) = Rout*ctpx2D ;
%%
ctpy = zeros(n1, n2, n3);

ctpy(:,:,1) = Rin*ctpy2D;
ctpy(:,:,2) = 0.5*(Rin+Rout)*ctpy2D;
ctpy(:,:,3) = Rout*ctpy2D;
%%

ctpz = zeros(n1, n2, n3);

ctpz(:,:,1) = Rin*ctpz2D;
ctpz(:,:,2) = 0.5*(Rin+Rout)*ctpz2D;
ctpz(:,:,3) = Rout*ctpz2D;
%PlotCtp3D(ctpx, ctpy, ctpz)


% control weight
wi = zeros(n1, n2, n3);

% w2D = [1.0        cos(ff/2)            1.0;...
%        cos(2*f1)  cos(ff/2)*cos(2*f1)  cos(2*f1);...
%        1.0        cos(ff/2)            1.0;...
%        ];

w2D = [1.0        cos(ff/2)            1.0;...
       cos(2*f1)  cos(ff/2)*cos(2*f1)  cos(2*f1);...
       1.0        cos(ff/2)            1.0;...
       cos(2*f1)  cos(ff/2)*cos(2*f1)  cos(2*f1);...
       1.0        cos(ff/2)            1.0;...
       cos(2*f1)  cos(ff/2)*cos(2*f1)  cos(2*f1);...
       1.0        cos(ff/2)            1.0;...
       cos(2*f1)  cos(ff/2)*cos(2*f1)  cos(2*f1);...
       1.0        cos(ff/2)            1.0];

wi(:,:,1) = w2D;
wi(:,:,2) = w2D;
wi(:,:,3) = w2D;

%% Refinement

%[wn, ctpxn, ctpyn, ctpzn, knot1n]  = KnotInsertMW1_3D(wi, ctpx, ctpy, ctpz, knot1, sref(nn1, ReduceKnotUnbound(knot1)));
[wn, ctpxn, ctpyn, ctpzn, knot1n]  = KnotInsertMW1_3D(wi, ctpx, ctpy, ctpz, knot1, sref([nn1 nn1 nn1 nn1], ReduceKnotUnbound(knot1)));
[wn, ctpxn, ctpyn, ctpzn, knot2n]  = KnotInsertMW2_3D(wn, ctpxn, ctpyn, ctpzn, knot2, sref(nn2, ReduceKnotUnbound(knot2)));
[wn, ctpxn, ctpyn, ctpzn, knot3n]  = KnotInsertMW3_3D(wn, ctpxn, ctpyn, ctpzn, knot3, sref(nn3, ReduceKnotUnbound(knot3)));

end